// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: http.proto

package api

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StartupReportRequest_HostType int32

const (
	StartupReportRequest_UNKNOWN    StartupReportRequest_HostType = 0
	StartupReportRequest_SELF       StartupReportRequest_HostType = 1
	StartupReportRequest_ALIYUN     StartupReportRequest_HostType = 2
	StartupReportRequest_TENCENTYUN StartupReportRequest_HostType = 3
)

// Enum value maps for StartupReportRequest_HostType.
var (
	StartupReportRequest_HostType_name = map[int32]string{
		0: "UNKNOWN",
		1: "SELF",
		2: "ALIYUN",
		3: "TENCENTYUN",
	}
	StartupReportRequest_HostType_value = map[string]int32{
		"UNKNOWN":    0,
		"SELF":       1,
		"ALIYUN":     2,
		"TENCENTYUN": 3,
	}
)

func (x StartupReportRequest_HostType) Enum() *StartupReportRequest_HostType {
	p := new(StartupReportRequest_HostType)
	*p = x
	return p
}

func (x StartupReportRequest_HostType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StartupReportRequest_HostType) Descriptor() protoreflect.EnumDescriptor {
	return file_http_proto_enumTypes[0].Descriptor()
}

func (StartupReportRequest_HostType) Type() protoreflect.EnumType {
	return &file_http_proto_enumTypes[0]
}

func (x StartupReportRequest_HostType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StartupReportRequest_HostType.Descriptor instead.
func (StartupReportRequest_HostType) EnumDescriptor() ([]byte, []int) {
	return file_http_proto_rawDescGZIP(), []int{4, 0}
}

type StartupReportRequest_DBType int32

const (
	StartupReportRequest_MYSQL   StartupReportRequest_DBType = 0
	StartupReportRequest_TIDB    StartupReportRequest_DBType = 1
	StartupReportRequest_REDIS   StartupReportRequest_DBType = 2
	StartupReportRequest_MONGODB StartupReportRequest_DBType = 3
)

// Enum value maps for StartupReportRequest_DBType.
var (
	StartupReportRequest_DBType_name = map[int32]string{
		0: "MYSQL",
		1: "TIDB",
		2: "REDIS",
		3: "MONGODB",
	}
	StartupReportRequest_DBType_value = map[string]int32{
		"MYSQL":   0,
		"TIDB":    1,
		"REDIS":   2,
		"MONGODB": 3,
	}
)

func (x StartupReportRequest_DBType) Enum() *StartupReportRequest_DBType {
	p := new(StartupReportRequest_DBType)
	*p = x
	return p
}

func (x StartupReportRequest_DBType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StartupReportRequest_DBType) Descriptor() protoreflect.EnumDescriptor {
	return file_http_proto_enumTypes[1].Descriptor()
}

func (StartupReportRequest_DBType) Type() protoreflect.EnumType {
	return &file_http_proto_enumTypes[1]
}

func (x StartupReportRequest_DBType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StartupReportRequest_DBType.Descriptor instead.
func (StartupReportRequest_DBType) EnumDescriptor() ([]byte, []int) {
	return file_http_proto_rawDescGZIP(), []int{4, 1}
}

type HelloWorldRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// description here
	Ping *string `protobuf:"bytes,1,opt,name=ping,proto3,oneof" json:"ping,omitempty"`
}

func (x *HelloWorldRequest) Reset() {
	*x = HelloWorldRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HelloWorldRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HelloWorldRequest) ProtoMessage() {}

func (x *HelloWorldRequest) ProtoReflect() protoreflect.Message {
	mi := &file_http_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HelloWorldRequest.ProtoReflect.Descriptor instead.
func (*HelloWorldRequest) Descriptor() ([]byte, []int) {
	return file_http_proto_rawDescGZIP(), []int{0}
}

func (x *HelloWorldRequest) GetPing() string {
	if x != nil && x.Ping != nil {
		return *x.Ping
	}
	return ""
}

type HelloWorldResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pang string `protobuf:"bytes,1,opt,name=pang,proto3" json:"pang,omitempty"`
}

func (x *HelloWorldResponse) Reset() {
	*x = HelloWorldResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HelloWorldResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HelloWorldResponse) ProtoMessage() {}

func (x *HelloWorldResponse) ProtoReflect() protoreflect.Message {
	mi := &file_http_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HelloWorldResponse.ProtoReflect.Descriptor instead.
func (*HelloWorldResponse) Descriptor() ([]byte, []int) {
	return file_http_proto_rawDescGZIP(), []int{1}
}

func (x *HelloWorldResponse) GetPang() string {
	if x != nil {
		return x.Pang
	}
	return ""
}

// heartbeat protocol
type HeartbeatRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgentInfo *HeartbeatRequest_Agent `protobuf:"bytes,1,opt,name=agent_info,json=agentInfo,proto3" json:"agent_info,omitempty"`
	DbInfo    *HeartbeatRequest_DB    `protobuf:"bytes,2,opt,name=dbInfo,proto3" json:"dbInfo,omitempty"`
}

func (x *HeartbeatRequest) Reset() {
	*x = HeartbeatRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeartbeatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatRequest) ProtoMessage() {}

func (x *HeartbeatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_http_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatRequest.ProtoReflect.Descriptor instead.
func (*HeartbeatRequest) Descriptor() ([]byte, []int) {
	return file_http_proto_rawDescGZIP(), []int{2}
}

func (x *HeartbeatRequest) GetAgentInfo() *HeartbeatRequest_Agent {
	if x != nil {
		return x.AgentInfo
	}
	return nil
}

func (x *HeartbeatRequest) GetDbInfo() *HeartbeatRequest_DB {
	if x != nil {
		return x.DbInfo
	}
	return nil
}

type HeartbeatResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HeartbeatResponse) Reset() {
	*x = HeartbeatResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeartbeatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatResponse) ProtoMessage() {}

func (x *HeartbeatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_http_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatResponse.ProtoReflect.Descriptor instead.
func (*HeartbeatResponse) Descriptor() ([]byte, []int) {
	return file_http_proto_rawDescGZIP(), []int{3}
}

// startup reporter protocol
type StartupReportRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HostType      StartupReportRequest_HostType `protobuf:"varint,1,opt,name=host_type,json=hostType,proto3,enum=api.StartupReportRequest_HostType" json:"host_type,omitempty"`
	Hostname      string                        `protobuf:"bytes,2,opt,name=hostname,proto3" json:"hostname,omitempty"`
	DbType        StartupReportRequest_DBType   `protobuf:"varint,3,opt,name=db_type,json=dbType,proto3,enum=api.StartupReportRequest_DBType" json:"db_type,omitempty"`
	DbVersion     string                        `protobuf:"bytes,4,opt,name=db_version,json=dbVersion,proto3" json:"db_version,omitempty"`
	IpAddr        string                        `protobuf:"bytes,5,opt,name=ip_addr,json=ipAddr,proto3" json:"ip_addr,omitempty"`
	Port          int32                         `protobuf:"varint,7,opt,name=port,proto3" json:"port,omitempty"`
	Os            string                        `protobuf:"bytes,8,opt,name=os,proto3" json:"os,omitempty"`
	OsVersion     string                        `protobuf:"bytes,9,opt,name=os_version,json=osVersion,proto3" json:"os_version,omitempty"`
	KernelVersion string                        `protobuf:"bytes,10,opt,name=kernel_version,json=kernelVersion,proto3" json:"kernel_version,omitempty"`
	Env           string                        `protobuf:"bytes,11,opt,name=env,proto3" json:"env,omitempty"`
}

func (x *StartupReportRequest) Reset() {
	*x = StartupReportRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartupReportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartupReportRequest) ProtoMessage() {}

func (x *StartupReportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_http_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartupReportRequest.ProtoReflect.Descriptor instead.
func (*StartupReportRequest) Descriptor() ([]byte, []int) {
	return file_http_proto_rawDescGZIP(), []int{4}
}

func (x *StartupReportRequest) GetHostType() StartupReportRequest_HostType {
	if x != nil {
		return x.HostType
	}
	return StartupReportRequest_UNKNOWN
}

func (x *StartupReportRequest) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *StartupReportRequest) GetDbType() StartupReportRequest_DBType {
	if x != nil {
		return x.DbType
	}
	return StartupReportRequest_MYSQL
}

func (x *StartupReportRequest) GetDbVersion() string {
	if x != nil {
		return x.DbVersion
	}
	return ""
}

func (x *StartupReportRequest) GetIpAddr() string {
	if x != nil {
		return x.IpAddr
	}
	return ""
}

func (x *StartupReportRequest) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *StartupReportRequest) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

func (x *StartupReportRequest) GetOsVersion() string {
	if x != nil {
		return x.OsVersion
	}
	return ""
}

func (x *StartupReportRequest) GetKernelVersion() string {
	if x != nil {
		return x.KernelVersion
	}
	return ""
}

func (x *StartupReportRequest) GetEnv() string {
	if x != nil {
		return x.Env
	}
	return ""
}

type StartupReportResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StartupReportResponse) Reset() {
	*x = StartupReportResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartupReportResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartupReportResponse) ProtoMessage() {}

func (x *StartupReportResponse) ProtoReflect() protoreflect.Message {
	mi := &file_http_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartupReportResponse.ProtoReflect.Descriptor instead.
func (*StartupReportResponse) Descriptor() ([]byte, []int) {
	return file_http_proto_rawDescGZIP(), []int{5}
}

type SearchMemberLogCountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartTime string `protobuf:"bytes,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime   string `protobuf:"bytes,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	Type      string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	DbIp      string `protobuf:"bytes,4,opt,name=db_ip,json=dbIp,proto3" json:"db_ip,omitempty"`
	DbPort    int32  `protobuf:"varint,5,opt,name=db_port,json=dbPort,proto3" json:"db_port,omitempty"`
	Size      int64  `protobuf:"varint,6,opt,name=size,proto3" json:"size,omitempty"`
	From      int64  `protobuf:"varint,7,opt,name=from,proto3" json:"from,omitempty"`
	Buckets   int64  `protobuf:"varint,8,opt,name=buckets,proto3" json:"buckets,omitempty"`
}

func (x *SearchMemberLogCountRequest) Reset() {
	*x = SearchMemberLogCountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchMemberLogCountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchMemberLogCountRequest) ProtoMessage() {}

func (x *SearchMemberLogCountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_http_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchMemberLogCountRequest.ProtoReflect.Descriptor instead.
func (*SearchMemberLogCountRequest) Descriptor() ([]byte, []int) {
	return file_http_proto_rawDescGZIP(), []int{6}
}

func (x *SearchMemberLogCountRequest) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *SearchMemberLogCountRequest) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *SearchMemberLogCountRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *SearchMemberLogCountRequest) GetDbIp() string {
	if x != nil {
		return x.DbIp
	}
	return ""
}

func (x *SearchMemberLogCountRequest) GetDbPort() int32 {
	if x != nil {
		return x.DbPort
	}
	return 0
}

func (x *SearchMemberLogCountRequest) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *SearchMemberLogCountRequest) GetFrom() int64 {
	if x != nil {
		return x.From
	}
	return 0
}

func (x *SearchMemberLogCountRequest) GetBuckets() int64 {
	if x != nil {
		return x.Buckets
	}
	return 0
}

type SearchMemberLogCountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Took         int32    `protobuf:"varint,1,opt,name=took,proto3" json:"took,omitempty"`
	TimedOut     bool     `protobuf:"varint,2,opt,name=timed_out,json=timedOut,proto3" json:"timed_out,omitempty"`
	From         int64    `protobuf:"varint,3,opt,name=from,proto3" json:"from,omitempty"`
	Size         int64    `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
	Hits         *HitsRes `protobuf:"bytes,5,opt,name=hits,proto3" json:"hits,omitempty"`
	Aggregations *AggsRes `protobuf:"bytes,6,opt,name=aggregations,proto3" json:"aggregations,omitempty"`
}

func (x *SearchMemberLogCountResponse) Reset() {
	*x = SearchMemberLogCountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchMemberLogCountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchMemberLogCountResponse) ProtoMessage() {}

func (x *SearchMemberLogCountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_http_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchMemberLogCountResponse.ProtoReflect.Descriptor instead.
func (*SearchMemberLogCountResponse) Descriptor() ([]byte, []int) {
	return file_http_proto_rawDescGZIP(), []int{7}
}

func (x *SearchMemberLogCountResponse) GetTook() int32 {
	if x != nil {
		return x.Took
	}
	return 0
}

func (x *SearchMemberLogCountResponse) GetTimedOut() bool {
	if x != nil {
		return x.TimedOut
	}
	return false
}

func (x *SearchMemberLogCountResponse) GetFrom() int64 {
	if x != nil {
		return x.From
	}
	return 0
}

func (x *SearchMemberLogCountResponse) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *SearchMemberLogCountResponse) GetHits() *HitsRes {
	if x != nil {
		return x.Hits
	}
	return nil
}

func (x *SearchMemberLogCountResponse) GetAggregations() *AggsRes {
	if x != nil {
		return x.Aggregations
	}
	return nil
}

type Total struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value int64 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Total) Reset() {
	*x = Total{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Total) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Total) ProtoMessage() {}

func (x *Total) ProtoReflect() protoreflect.Message {
	mi := &file_http_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Total.ProtoReflect.Descriptor instead.
func (*Total) Descriptor() ([]byte, []int) {
	return file_http_proto_rawDescGZIP(), []int{8}
}

func (x *Total) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type HitsRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total *Total  `protobuf:"bytes,1,opt,name=total,proto3" json:"total,omitempty"`
	Hits  []*Hits `protobuf:"bytes,2,rep,name=hits,proto3" json:"hits,omitempty"`
}

func (x *HitsRes) Reset() {
	*x = HitsRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HitsRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HitsRes) ProtoMessage() {}

func (x *HitsRes) ProtoReflect() protoreflect.Message {
	mi := &file_http_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HitsRes.ProtoReflect.Descriptor instead.
func (*HitsRes) Descriptor() ([]byte, []int) {
	return file_http_proto_rawDescGZIP(), []int{9}
}

func (x *HitsRes) GetTotal() *Total {
	if x != nil {
		return x.Total
	}
	return nil
}

func (x *HitsRes) GetHits() []*Hits {
	if x != nil {
		return x.Hits
	}
	return nil
}

type SourceIp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ip string `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
}

func (x *SourceIp) Reset() {
	*x = SourceIp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SourceIp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SourceIp) ProtoMessage() {}

func (x *SourceIp) ProtoReflect() protoreflect.Message {
	mi := &file_http_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SourceIp.ProtoReflect.Descriptor instead.
func (*SourceIp) Descriptor() ([]byte, []int) {
	return file_http_proto_rawDescGZIP(), []int{10}
}

func (x *SourceIp) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

type Input struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *Input) Reset() {
	*x = Input{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Input) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Input) ProtoMessage() {}

func (x *Input) ProtoReflect() protoreflect.Message {
	mi := &file_http_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Input.ProtoReflect.Descriptor instead.
func (*Input) Descriptor() ([]byte, []int) {
	return file_http_proto_rawDescGZIP(), []int{11}
}

func (x *Input) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type Fileset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Fileset) Reset() {
	*x = Fileset{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Fileset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Fileset) ProtoMessage() {}

func (x *Fileset) ProtoReflect() protoreflect.Message {
	mi := &file_http_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Fileset.ProtoReflect.Descriptor instead.
func (*Fileset) Descriptor() ([]byte, []int) {
	return file_http_proto_rawDescGZIP(), []int{12}
}

func (x *Fileset) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Service struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *Service) Reset() {
	*x = Service{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Service) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Service) ProtoMessage() {}

func (x *Service) ProtoReflect() protoreflect.Message {
	mi := &file_http_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Service.ProtoReflect.Descriptor instead.
func (*Service) Descriptor() ([]byte, []int) {
	return file_http_proto_rawDescGZIP(), []int{13}
}

func (x *Service) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type Host struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Host) Reset() {
	*x = Host{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Host) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Host) ProtoMessage() {}

func (x *Host) ProtoReflect() protoreflect.Message {
	mi := &file_http_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Host.ProtoReflect.Descriptor instead.
func (*Host) Descriptor() ([]byte, []int) {
	return file_http_proto_rawDescGZIP(), []int{14}
}

func (x *Host) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type LockTime struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sec float32 `protobuf:"fixed32,1,opt,name=sec,proto3" json:"sec,omitempty"`
}

func (x *LockTime) Reset() {
	*x = LockTime{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LockTime) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LockTime) ProtoMessage() {}

func (x *LockTime) ProtoReflect() protoreflect.Message {
	mi := &file_http_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LockTime.ProtoReflect.Descriptor instead.
func (*LockTime) Descriptor() ([]byte, []int) {
	return file_http_proto_rawDescGZIP(), []int{15}
}

func (x *LockTime) GetSec() float32 {
	if x != nil {
		return x.Sec
	}
	return 0
}

type SlowLog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Schema       string    `protobuf:"bytes,1,opt,name=schema,proto3" json:"schema,omitempty"`
	LockTime     *LockTime `protobuf:"bytes,2,opt,name=lock_time,json=lockTime,proto3" json:"lock_time,omitempty"`
	RowsSent     int32     `protobuf:"varint,3,opt,name=rows_sent,json=rowsSent,proto3" json:"rows_sent,omitempty"`
	RowsExamined int32     `protobuf:"varint,4,opt,name=rows_examined,json=rowsExamined,proto3" json:"rows_examined,omitempty"`
	Query        string    `protobuf:"bytes,5,opt,name=query,proto3" json:"query,omitempty"`
	CurrentUser  string    `protobuf:"bytes,6,opt,name=current_user,json=currentUser,proto3" json:"current_user,omitempty"`
}

func (x *SlowLog) Reset() {
	*x = SlowLog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SlowLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SlowLog) ProtoMessage() {}

func (x *SlowLog) ProtoReflect() protoreflect.Message {
	mi := &file_http_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SlowLog.ProtoReflect.Descriptor instead.
func (*SlowLog) Descriptor() ([]byte, []int) {
	return file_http_proto_rawDescGZIP(), []int{16}
}

func (x *SlowLog) GetSchema() string {
	if x != nil {
		return x.Schema
	}
	return ""
}

func (x *SlowLog) GetLockTime() *LockTime {
	if x != nil {
		return x.LockTime
	}
	return nil
}

func (x *SlowLog) GetRowsSent() int32 {
	if x != nil {
		return x.RowsSent
	}
	return 0
}

func (x *SlowLog) GetRowsExamined() int32 {
	if x != nil {
		return x.RowsExamined
	}
	return 0
}

func (x *SlowLog) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *SlowLog) GetCurrentUser() string {
	if x != nil {
		return x.CurrentUser
	}
	return ""
}

type Mysql struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ThreadId int32    `protobuf:"varint,1,opt,name=thread_id,json=threadId,proto3" json:"thread_id,omitempty"`
	Slowlog  *SlowLog `protobuf:"bytes,2,opt,name=slowlog,proto3" json:"slowlog,omitempty"`
}

func (x *Mysql) Reset() {
	*x = Mysql{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Mysql) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Mysql) ProtoMessage() {}

func (x *Mysql) ProtoReflect() protoreflect.Message {
	mi := &file_http_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Mysql.ProtoReflect.Descriptor instead.
func (*Mysql) Descriptor() ([]byte, []int) {
	return file_http_proto_rawDescGZIP(), []int{17}
}

func (x *Mysql) GetThreadId() int32 {
	if x != nil {
		return x.ThreadId
	}
	return 0
}

func (x *Mysql) GetSlowlog() *SlowLog {
	if x != nil {
		return x.Slowlog
	}
	return nil
}

type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_http_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_http_proto_rawDescGZIP(), []int{18}
}

func (x *User) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Source struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cluster   string    `protobuf:"bytes,1,opt,name=cluster,proto3" json:"cluster,omitempty"`
	Instance  string    `protobuf:"bytes,2,opt,name=instance,proto3" json:"instance,omitempty"`
	Source    *SourceIp `protobuf:"bytes,3,opt,name=source,proto3" json:"source,omitempty"`
	Fileset   *Fileset  `protobuf:"bytes,4,opt,name=fileset,proto3" json:"fileset,omitempty"`
	Input     *Input    `protobuf:"bytes,5,opt,name=input,proto3" json:"input,omitempty"`
	Timestamp string    `protobuf:"bytes,6,opt,name=timestamp,json=@timestamp,proto3" json:"timestamp,omitempty"`
	Service   *Service  `protobuf:"bytes,7,opt,name=service,proto3" json:"service,omitempty"`
	Host      *Host     `protobuf:"bytes,8,opt,name=host,proto3" json:"host,omitempty"`
	Mysql     *Mysql    `protobuf:"bytes,9,opt,name=mysql,proto3" json:"mysql,omitempty"`
	User      *User     `protobuf:"bytes,10,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *Source) Reset() {
	*x = Source{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Source) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Source) ProtoMessage() {}

func (x *Source) ProtoReflect() protoreflect.Message {
	mi := &file_http_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Source.ProtoReflect.Descriptor instead.
func (*Source) Descriptor() ([]byte, []int) {
	return file_http_proto_rawDescGZIP(), []int{19}
}

func (x *Source) GetCluster() string {
	if x != nil {
		return x.Cluster
	}
	return ""
}

func (x *Source) GetInstance() string {
	if x != nil {
		return x.Instance
	}
	return ""
}

func (x *Source) GetSource() *SourceIp {
	if x != nil {
		return x.Source
	}
	return nil
}

func (x *Source) GetFileset() *Fileset {
	if x != nil {
		return x.Fileset
	}
	return nil
}

func (x *Source) GetInput() *Input {
	if x != nil {
		return x.Input
	}
	return nil
}

func (x *Source) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *Source) GetService() *Service {
	if x != nil {
		return x.Service
	}
	return nil
}

func (x *Source) GetHost() *Host {
	if x != nil {
		return x.Host
	}
	return nil
}

func (x *Source) GetMysql() *Mysql {
	if x != nil {
		return x.Mysql
	}
	return nil
}

func (x *Source) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

type Hits struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	XIndex  string  `protobuf:"bytes,1,opt,name=_index,json=Index,proto3" json:"_index,omitempty"`
	XId     string  `protobuf:"bytes,2,opt,name=_id,json=Id,proto3" json:"_id,omitempty"`
	XSource *Source `protobuf:"bytes,3,opt,name=_source,json=Source,proto3" json:"_source,omitempty"`
}

func (x *Hits) Reset() {
	*x = Hits{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Hits) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Hits) ProtoMessage() {}

func (x *Hits) ProtoReflect() protoreflect.Message {
	mi := &file_http_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Hits.ProtoReflect.Descriptor instead.
func (*Hits) Descriptor() ([]byte, []int) {
	return file_http_proto_rawDescGZIP(), []int{20}
}

func (x *Hits) GetXIndex() string {
	if x != nil {
		return x.XIndex
	}
	return ""
}

func (x *Hits) GetXId() string {
	if x != nil {
		return x.XId
	}
	return ""
}

func (x *Hits) GetXSource() *Source {
	if x != nil {
		return x.XSource
	}
	return nil
}

type AggsRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Logs     *Logs  `protobuf:"bytes,1,opt,name=logs,proto3" json:"logs,omitempty"`
	Interval string `protobuf:"bytes,2,opt,name=interval,proto3" json:"interval,omitempty"`
}

func (x *AggsRes) Reset() {
	*x = AggsRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AggsRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AggsRes) ProtoMessage() {}

func (x *AggsRes) ProtoReflect() protoreflect.Message {
	mi := &file_http_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AggsRes.ProtoReflect.Descriptor instead.
func (*AggsRes) Descriptor() ([]byte, []int) {
	return file_http_proto_rawDescGZIP(), []int{21}
}

func (x *AggsRes) GetLogs() *Logs {
	if x != nil {
		return x.Logs
	}
	return nil
}

func (x *AggsRes) GetInterval() string {
	if x != nil {
		return x.Interval
	}
	return ""
}

type Logs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Buckets []*Buckets `protobuf:"bytes,1,rep,name=buckets,proto3" json:"buckets,omitempty"`
}

func (x *Logs) Reset() {
	*x = Logs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Logs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Logs) ProtoMessage() {}

func (x *Logs) ProtoReflect() protoreflect.Message {
	mi := &file_http_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Logs.ProtoReflect.Descriptor instead.
func (*Logs) Descriptor() ([]byte, []int) {
	return file_http_proto_rawDescGZIP(), []int{22}
}

func (x *Logs) GetBuckets() []*Buckets {
	if x != nil {
		return x.Buckets
	}
	return nil
}

type Buckets struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyAsString string `protobuf:"bytes,1,opt,name=key_as_string,json=keyAsString,proto3" json:"key_as_string,omitempty"`
	Key         int64  `protobuf:"varint,2,opt,name=key,proto3" json:"key,omitempty"`
	DocCount    int32  `protobuf:"varint,3,opt,name=doc_count,json=docCount,proto3" json:"doc_count,omitempty"`
}

func (x *Buckets) Reset() {
	*x = Buckets{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Buckets) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Buckets) ProtoMessage() {}

func (x *Buckets) ProtoReflect() protoreflect.Message {
	mi := &file_http_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Buckets.ProtoReflect.Descriptor instead.
func (*Buckets) Descriptor() ([]byte, []int) {
	return file_http_proto_rawDescGZIP(), []int{23}
}

func (x *Buckets) GetKeyAsString() string {
	if x != nil {
		return x.KeyAsString
	}
	return ""
}

func (x *Buckets) GetKey() int64 {
	if x != nil {
		return x.Key
	}
	return 0
}

func (x *Buckets) GetDocCount() int32 {
	if x != nil {
		return x.DocCount
	}
	return 0
}

type GetDBClustersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Offset int32 `protobuf:"varint,1,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit  int32 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *GetDBClustersRequest) Reset() {
	*x = GetDBClustersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDBClustersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDBClustersRequest) ProtoMessage() {}

func (x *GetDBClustersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_http_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDBClustersRequest.ProtoReflect.Descriptor instead.
func (*GetDBClustersRequest) Descriptor() ([]byte, []int) {
	return file_http_proto_rawDescGZIP(), []int{24}
}

func (x *GetDBClustersRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetDBClustersRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type DBCluster struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 集群 id
	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// 集群名
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// 集群类型
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// db 类型：mysql
	Dbtype string `protobuf:"bytes,4,opt,name=dbtype,proto3" json:"dbtype,omitempty"`
	// 创建时间戳
	CreatedAt int64 `protobuf:"varint,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// 更新时间戳
	UpdatedAt int64 `protobuf:"varint,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *DBCluster) Reset() {
	*x = DBCluster{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DBCluster) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBCluster) ProtoMessage() {}

func (x *DBCluster) ProtoReflect() protoreflect.Message {
	mi := &file_http_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBCluster.ProtoReflect.Descriptor instead.
func (*DBCluster) Descriptor() ([]byte, []int) {
	return file_http_proto_rawDescGZIP(), []int{25}
}

func (x *DBCluster) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DBCluster) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DBCluster) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *DBCluster) GetDbtype() string {
	if x != nil {
		return x.Dbtype
	}
	return ""
}

func (x *DBCluster) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *DBCluster) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type GetDBClustersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dbclusters []*DBCluster `protobuf:"bytes,1,rep,name=dbclusters,proto3" json:"dbclusters,omitempty"`
}

func (x *GetDBClustersResponse) Reset() {
	*x = GetDBClustersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDBClustersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDBClustersResponse) ProtoMessage() {}

func (x *GetDBClustersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_http_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDBClustersResponse.ProtoReflect.Descriptor instead.
func (*GetDBClustersResponse) Descriptor() ([]byte, []int) {
	return file_http_proto_rawDescGZIP(), []int{26}
}

func (x *GetDBClustersResponse) GetDbclusters() []*DBCluster {
	if x != nil {
		return x.Dbclusters
	}
	return nil
}

type NewDBClusterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 集群名
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// 集群描述
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// db类型
	DbType string `protobuf:"bytes,3,opt,name=db_type,json=dbType,proto3" json:"db_type,omitempty"`
}

func (x *NewDBClusterRequest) Reset() {
	*x = NewDBClusterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewDBClusterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewDBClusterRequest) ProtoMessage() {}

func (x *NewDBClusterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_http_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewDBClusterRequest.ProtoReflect.Descriptor instead.
func (*NewDBClusterRequest) Descriptor() ([]byte, []int) {
	return file_http_proto_rawDescGZIP(), []int{27}
}

func (x *NewDBClusterRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NewDBClusterRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *NewDBClusterRequest) GetDbType() string {
	if x != nil {
		return x.DbType
	}
	return ""
}

type DBClusterMember struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 成员id
	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// 集群 id
	ClusterId int32 `protobuf:"varint,2,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	// 主机名
	Hostname string `protobuf:"bytes,3,opt,name=hostname,proto3" json:"hostname,omitempty"`
	// db类型：mysql
	DbType string `protobuf:"bytes,4,opt,name=db_type,json=dbType,proto3" json:"db_type,omitempty"`
	// db 版本
	DbVersion string `protobuf:"bytes,5,opt,name=db_version,json=dbVersion,proto3" json:"db_version,omitempty"`
	// 角色
	Role int32 `protobuf:"varint,6,opt,name=role,proto3" json:"role,omitempty"`
	// ip
	Ipaddr string `protobuf:"bytes,7,opt,name=ipaddr,proto3" json:"ipaddr,omitempty"`
	// db port
	Port int32 `protobuf:"varint,8,opt,name=port,proto3" json:"port,omitempty"`
	// 操作系统
	Os string `protobuf:"bytes,9,opt,name=os,proto3" json:"os,omitempty"`
	// 操作系统发型版本
	OsVersion string `protobuf:"bytes,10,opt,name=os_version,json=osVersion,proto3" json:"os_version,omitempty"`
	// 主机类型：0：未指定，1：自有；2：阿里云，3：腾讯云
	HostType int32 `protobuf:"varint,11,opt,name=host_type,json=hostType,proto3" json:"host_type,omitempty"`
	// 创建时间戳
	CreatedAt int64 `protobuf:"varint,12,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// 更新时间戳
	UpdatedAt int64 `protobuf:"varint,13,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	// 可能不存在
	Extra *DBClusterMember_ExtraInfo `protobuf:"bytes,99,opt,name=extra,proto3,oneof" json:"extra,omitempty"`
}

func (x *DBClusterMember) Reset() {
	*x = DBClusterMember{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DBClusterMember) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBClusterMember) ProtoMessage() {}

func (x *DBClusterMember) ProtoReflect() protoreflect.Message {
	mi := &file_http_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBClusterMember.ProtoReflect.Descriptor instead.
func (*DBClusterMember) Descriptor() ([]byte, []int) {
	return file_http_proto_rawDescGZIP(), []int{28}
}

func (x *DBClusterMember) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DBClusterMember) GetClusterId() int32 {
	if x != nil {
		return x.ClusterId
	}
	return 0
}

func (x *DBClusterMember) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *DBClusterMember) GetDbType() string {
	if x != nil {
		return x.DbType
	}
	return ""
}

func (x *DBClusterMember) GetDbVersion() string {
	if x != nil {
		return x.DbVersion
	}
	return ""
}

func (x *DBClusterMember) GetRole() int32 {
	if x != nil {
		return x.Role
	}
	return 0
}

func (x *DBClusterMember) GetIpaddr() string {
	if x != nil {
		return x.Ipaddr
	}
	return ""
}

func (x *DBClusterMember) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *DBClusterMember) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

func (x *DBClusterMember) GetOsVersion() string {
	if x != nil {
		return x.OsVersion
	}
	return ""
}

func (x *DBClusterMember) GetHostType() int32 {
	if x != nil {
		return x.HostType
	}
	return 0
}

func (x *DBClusterMember) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *DBClusterMember) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *DBClusterMember) GetExtra() *DBClusterMember_ExtraInfo {
	if x != nil {
		return x.Extra
	}
	return nil
}

type GetToAssignDbClusterMembersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// eg.mysql
	DbType string `protobuf:"bytes,1,opt,name=db_type,json=dbType,proto3" json:"db_type,omitempty"`
	// eg.test,prod
	Env string `protobuf:"bytes,2,opt,name=env,proto3" json:"env,omitempty"`
	// ip 前缀，可选
	IpPrefix *string `protobuf:"bytes,3,opt,name=ip_prefix,json=ipPrefix,proto3,oneof" json:"ip_prefix,omitempty"`
	Limit    int32   `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset   int32   `protobuf:"varint,5,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *GetToAssignDbClusterMembersRequest) Reset() {
	*x = GetToAssignDbClusterMembersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetToAssignDbClusterMembersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetToAssignDbClusterMembersRequest) ProtoMessage() {}

func (x *GetToAssignDbClusterMembersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_http_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetToAssignDbClusterMembersRequest.ProtoReflect.Descriptor instead.
func (*GetToAssignDbClusterMembersRequest) Descriptor() ([]byte, []int) {
	return file_http_proto_rawDescGZIP(), []int{29}
}

func (x *GetToAssignDbClusterMembersRequest) GetDbType() string {
	if x != nil {
		return x.DbType
	}
	return ""
}

func (x *GetToAssignDbClusterMembersRequest) GetEnv() string {
	if x != nil {
		return x.Env
	}
	return ""
}

func (x *GetToAssignDbClusterMembersRequest) GetIpPrefix() string {
	if x != nil && x.IpPrefix != nil {
		return *x.IpPrefix
	}
	return ""
}

func (x *GetToAssignDbClusterMembersRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetToAssignDbClusterMembersRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type GetToAssignDbClusterMembersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Members []*DBClusterMember `protobuf:"bytes,1,rep,name=members,proto3" json:"members,omitempty"`
}

func (x *GetToAssignDbClusterMembersResponse) Reset() {
	*x = GetToAssignDbClusterMembersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetToAssignDbClusterMembersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetToAssignDbClusterMembersResponse) ProtoMessage() {}

func (x *GetToAssignDbClusterMembersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_http_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetToAssignDbClusterMembersResponse.ProtoReflect.Descriptor instead.
func (*GetToAssignDbClusterMembersResponse) Descriptor() ([]byte, []int) {
	return file_http_proto_rawDescGZIP(), []int{30}
}

func (x *GetToAssignDbClusterMembersResponse) GetMembers() []*DBClusterMember {
	if x != nil {
		return x.Members
	}
	return nil
}

type GetDbClusterMembersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetDbClusterMembersRequest) Reset() {
	*x = GetDbClusterMembersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDbClusterMembersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDbClusterMembersRequest) ProtoMessage() {}

func (x *GetDbClusterMembersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_http_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDbClusterMembersRequest.ProtoReflect.Descriptor instead.
func (*GetDbClusterMembersRequest) Descriptor() ([]byte, []int) {
	return file_http_proto_rawDescGZIP(), []int{31}
}

type GetDbClusterMembersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Members []*DBClusterMember `protobuf:"bytes,1,rep,name=members,proto3" json:"members,omitempty"`
}

func (x *GetDbClusterMembersResponse) Reset() {
	*x = GetDbClusterMembersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDbClusterMembersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDbClusterMembersResponse) ProtoMessage() {}

func (x *GetDbClusterMembersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_http_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDbClusterMembersResponse.ProtoReflect.Descriptor instead.
func (*GetDbClusterMembersResponse) Descriptor() ([]byte, []int) {
	return file_http_proto_rawDescGZIP(), []int{32}
}

func (x *GetDbClusterMembersResponse) GetMembers() []*DBClusterMember {
	if x != nil {
		return x.Members
	}
	return nil
}

type AssignDbClusterMembersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberIds []int32 `protobuf:"varint,1,rep,packed,name=member_ids,json=memberIds,proto3" json:"member_ids,omitempty"`
}

func (x *AssignDbClusterMembersRequest) Reset() {
	*x = AssignDbClusterMembersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssignDbClusterMembersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignDbClusterMembersRequest) ProtoMessage() {}

func (x *AssignDbClusterMembersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_http_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignDbClusterMembersRequest.ProtoReflect.Descriptor instead.
func (*AssignDbClusterMembersRequest) Descriptor() ([]byte, []int) {
	return file_http_proto_rawDescGZIP(), []int{33}
}

func (x *AssignDbClusterMembersRequest) GetMemberIds() []int32 {
	if x != nil {
		return x.MemberIds
	}
	return nil
}

type AssignDbClusterMembersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AssignDbClusterMembersResponse) Reset() {
	*x = AssignDbClusterMembersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssignDbClusterMembersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignDbClusterMembersResponse) ProtoMessage() {}

func (x *AssignDbClusterMembersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_http_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignDbClusterMembersResponse.ProtoReflect.Descriptor instead.
func (*AssignDbClusterMembersResponse) Descriptor() ([]byte, []int) {
	return file_http_proto_rawDescGZIP(), []int{34}
}

type GetAllTagsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetAllTagsRequest) Reset() {
	*x = GetAllTagsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllTagsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllTagsRequest) ProtoMessage() {}

func (x *GetAllTagsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_http_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllTagsRequest.ProtoReflect.Descriptor instead.
func (*GetAllTagsRequest) Descriptor() ([]byte, []int) {
	return file_http_proto_rawDescGZIP(), []int{35}
}

type GetAllTagsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tags []string `protobuf:"bytes,1,rep,name=tags,proto3" json:"tags,omitempty"`
}

func (x *GetAllTagsResponse) Reset() {
	*x = GetAllTagsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllTagsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllTagsResponse) ProtoMessage() {}

func (x *GetAllTagsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_http_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllTagsResponse.ProtoReflect.Descriptor instead.
func (*GetAllTagsResponse) Descriptor() ([]byte, []int) {
	return file_http_proto_rawDescGZIP(), []int{36}
}

func (x *GetAllTagsResponse) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type AddTagRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemType string `protobuf:"bytes,1,opt,name=item_type,json=itemType,proto3" json:"item_type,omitempty"`
	ItemId   int32  `protobuf:"varint,2,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	Tag      string `protobuf:"bytes,3,opt,name=tag,proto3" json:"tag,omitempty"`
}

func (x *AddTagRequest) Reset() {
	*x = AddTagRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddTagRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTagRequest) ProtoMessage() {}

func (x *AddTagRequest) ProtoReflect() protoreflect.Message {
	mi := &file_http_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTagRequest.ProtoReflect.Descriptor instead.
func (*AddTagRequest) Descriptor() ([]byte, []int) {
	return file_http_proto_rawDescGZIP(), []int{37}
}

func (x *AddTagRequest) GetItemType() string {
	if x != nil {
		return x.ItemType
	}
	return ""
}

func (x *AddTagRequest) GetItemId() int32 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *AddTagRequest) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

type AddTagResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddTagResponse) Reset() {
	*x = AddTagResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddTagResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTagResponse) ProtoMessage() {}

func (x *AddTagResponse) ProtoReflect() protoreflect.Message {
	mi := &file_http_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTagResponse.ProtoReflect.Descriptor instead.
func (*AddTagResponse) Descriptor() ([]byte, []int) {
	return file_http_proto_rawDescGZIP(), []int{38}
}

type GetInstanceIndicesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host string `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Port int32  `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	From string `protobuf:"bytes,3,opt,name=from,proto3" json:"from,omitempty"`
	To   string `protobuf:"bytes,4,opt,name=to,proto3" json:"to,omitempty"`
}

func (x *GetInstanceIndicesRequest) Reset() {
	*x = GetInstanceIndicesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInstanceIndicesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInstanceIndicesRequest) ProtoMessage() {}

func (x *GetInstanceIndicesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_http_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInstanceIndicesRequest.ProtoReflect.Descriptor instead.
func (*GetInstanceIndicesRequest) Descriptor() ([]byte, []int) {
	return file_http_proto_rawDescGZIP(), []int{39}
}

func (x *GetInstanceIndicesRequest) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *GetInstanceIndicesRequest) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *GetInstanceIndicesRequest) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *GetInstanceIndicesRequest) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

type GetInstanceIndicesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CpuRatios  []*GetInstanceIndicesResponse_IndexValue `protobuf:"bytes,1,rep,name=cpu_ratios,json=cpuRatios,proto3" json:"cpu_ratios,omitempty"`
	MemRatios  []*GetInstanceIndicesResponse_IndexValue `protobuf:"bytes,2,rep,name=mem_ratios,json=memRatios,proto3" json:"mem_ratios,omitempty"`
	DiskRatios []*GetInstanceIndicesResponse_IndexValue `protobuf:"bytes,3,rep,name=disk_ratios,json=diskRatios,proto3" json:"disk_ratios,omitempty"`
	Qps        []*GetInstanceIndicesResponse_IndexValue `protobuf:"bytes,4,rep,name=qps,proto3" json:"qps,omitempty"`
	Tps        []*GetInstanceIndicesResponse_IndexValue `protobuf:"bytes,5,rep,name=tps,proto3" json:"tps,omitempty"`
}

func (x *GetInstanceIndicesResponse) Reset() {
	*x = GetInstanceIndicesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInstanceIndicesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInstanceIndicesResponse) ProtoMessage() {}

func (x *GetInstanceIndicesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_http_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInstanceIndicesResponse.ProtoReflect.Descriptor instead.
func (*GetInstanceIndicesResponse) Descriptor() ([]byte, []int) {
	return file_http_proto_rawDescGZIP(), []int{40}
}

func (x *GetInstanceIndicesResponse) GetCpuRatios() []*GetInstanceIndicesResponse_IndexValue {
	if x != nil {
		return x.CpuRatios
	}
	return nil
}

func (x *GetInstanceIndicesResponse) GetMemRatios() []*GetInstanceIndicesResponse_IndexValue {
	if x != nil {
		return x.MemRatios
	}
	return nil
}

func (x *GetInstanceIndicesResponse) GetDiskRatios() []*GetInstanceIndicesResponse_IndexValue {
	if x != nil {
		return x.DiskRatios
	}
	return nil
}

func (x *GetInstanceIndicesResponse) GetQps() []*GetInstanceIndicesResponse_IndexValue {
	if x != nil {
		return x.Qps
	}
	return nil
}

func (x *GetInstanceIndicesResponse) GetTps() []*GetInstanceIndicesResponse_IndexValue {
	if x != nil {
		return x.Tps
	}
	return nil
}

type HeartbeatRequest_Agent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Localip   string  `protobuf:"bytes,1,opt,name=localip,proto3" json:"localip,omitempty"`
	CpuRatio  float64 `protobuf:"fixed64,2,opt,name=cpu_ratio,json=cpuRatio,proto3" json:"cpu_ratio,omitempty"`
	DiskRatio float64 `protobuf:"fixed64,3,opt,name=disk_ratio,json=diskRatio,proto3" json:"disk_ratio,omitempty"`
	MemRatio  float64 `protobuf:"fixed64,4,opt,name=mem_ratio,json=memRatio,proto3" json:"mem_ratio,omitempty"`
	Datetime  string  `protobuf:"bytes,5,opt,name=datetime,proto3" json:"datetime,omitempty"`
}

func (x *HeartbeatRequest_Agent) Reset() {
	*x = HeartbeatRequest_Agent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeartbeatRequest_Agent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatRequest_Agent) ProtoMessage() {}

func (x *HeartbeatRequest_Agent) ProtoReflect() protoreflect.Message {
	mi := &file_http_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatRequest_Agent.ProtoReflect.Descriptor instead.
func (*HeartbeatRequest_Agent) Descriptor() ([]byte, []int) {
	return file_http_proto_rawDescGZIP(), []int{2, 0}
}

func (x *HeartbeatRequest_Agent) GetLocalip() string {
	if x != nil {
		return x.Localip
	}
	return ""
}

func (x *HeartbeatRequest_Agent) GetCpuRatio() float64 {
	if x != nil {
		return x.CpuRatio
	}
	return 0
}

func (x *HeartbeatRequest_Agent) GetDiskRatio() float64 {
	if x != nil {
		return x.DiskRatio
	}
	return 0
}

func (x *HeartbeatRequest_Agent) GetMemRatio() float64 {
	if x != nil {
		return x.MemRatio
	}
	return 0
}

func (x *HeartbeatRequest_Agent) GetDatetime() string {
	if x != nil {
		return x.Datetime
	}
	return ""
}

type HeartbeatRequest_DB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dbtype string  `protobuf:"bytes,1,opt,name=dbtype,proto3" json:"dbtype,omitempty"`
	Port   int32   `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	Qps    float64 `protobuf:"fixed64,3,opt,name=qps,proto3" json:"qps,omitempty"`
	Tps    float64 `protobuf:"fixed64,4,opt,name=tps,proto3" json:"tps,omitempty"`
}

func (x *HeartbeatRequest_DB) Reset() {
	*x = HeartbeatRequest_DB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeartbeatRequest_DB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatRequest_DB) ProtoMessage() {}

func (x *HeartbeatRequest_DB) ProtoReflect() protoreflect.Message {
	mi := &file_http_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatRequest_DB.ProtoReflect.Descriptor instead.
func (*HeartbeatRequest_DB) Descriptor() ([]byte, []int) {
	return file_http_proto_rawDescGZIP(), []int{2, 1}
}

func (x *HeartbeatRequest_DB) GetDbtype() string {
	if x != nil {
		return x.Dbtype
	}
	return ""
}

func (x *HeartbeatRequest_DB) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *HeartbeatRequest_DB) GetQps() float64 {
	if x != nil {
		return x.Qps
	}
	return 0
}

func (x *HeartbeatRequest_DB) GetTps() float64 {
	if x != nil {
		return x.Tps
	}
	return 0
}

type DBClusterMember_ExtraInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 集群名（cluster_id != 0时存在）
	ClusterName string `protobuf:"bytes,1,opt,name=cluster_name,json=clusterName,proto3" json:"cluster_name,omitempty"`
}

func (x *DBClusterMember_ExtraInfo) Reset() {
	*x = DBClusterMember_ExtraInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DBClusterMember_ExtraInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBClusterMember_ExtraInfo) ProtoMessage() {}

func (x *DBClusterMember_ExtraInfo) ProtoReflect() protoreflect.Message {
	mi := &file_http_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBClusterMember_ExtraInfo.ProtoReflect.Descriptor instead.
func (*DBClusterMember_ExtraInfo) Descriptor() ([]byte, []int) {
	return file_http_proto_rawDescGZIP(), []int{28, 0}
}

func (x *DBClusterMember_ExtraInfo) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

type GetInstanceIndicesResponse_IndexValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 指标值；
	Value float64 `protobuf:"fixed64,1,opt,name=value,proto3" json:"value,omitempty"`
	// 计算当前指标值元素个数；
	Count int64 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	// 该指标值对应的起始时间
	StartTime string `protobuf:"bytes,3,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
}

func (x *GetInstanceIndicesResponse_IndexValue) Reset() {
	*x = GetInstanceIndicesResponse_IndexValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_http_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInstanceIndicesResponse_IndexValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInstanceIndicesResponse_IndexValue) ProtoMessage() {}

func (x *GetInstanceIndicesResponse_IndexValue) ProtoReflect() protoreflect.Message {
	mi := &file_http_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInstanceIndicesResponse_IndexValue.ProtoReflect.Descriptor instead.
func (*GetInstanceIndicesResponse_IndexValue) Descriptor() ([]byte, []int) {
	return file_http_proto_rawDescGZIP(), []int{40, 0}
}

func (x *GetInstanceIndicesResponse_IndexValue) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *GetInstanceIndicesResponse_IndexValue) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *GetInstanceIndicesResponse_IndexValue) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

var File_http_proto protoreflect.FileDescriptor

var file_http_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x68, 0x74, 0x74, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x61, 0x70,
	0x69, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x35, 0x0a, 0x11, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x04, 0x70, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x70, 0x69, 0x6e, 0x67, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a,
	0x05, 0x5f, 0x70, 0x69, 0x6e, 0x67, 0x22, 0x28, 0x0a, 0x12, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x57,
	0x6f, 0x72, 0x6c, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x61, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x6e, 0x67,
	0x22, 0xef, 0x02, 0x0a, 0x10, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x0a, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x09, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x30, 0x0a, 0x06, 0x64, 0x62, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x44, 0x42, 0x52, 0x06, 0x64, 0x62, 0x49,
	0x6e, 0x66, 0x6f, 0x1a, 0x96, 0x01, 0x0a, 0x05, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x70, 0x75, 0x5f, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x63, 0x70, 0x75, 0x52,
	0x61, 0x74, 0x69, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x69, 0x73, 0x6b, 0x5f, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x64, 0x69, 0x73, 0x6b, 0x52, 0x61,
	0x74, 0x69, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x5f, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x52, 0x61, 0x74, 0x69, 0x6f,
	0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x1a, 0x54, 0x0a, 0x02,
	0x44, 0x42, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x62, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x64, 0x62, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f,
	0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x10,
	0x0a, 0x03, 0x71, 0x70, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x71, 0x70, 0x73,
	0x12, 0x10, 0x0a, 0x03, 0x74, 0x70, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x74,
	0x70, 0x73, 0x22, 0x13, 0x0a, 0x11, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xd8, 0x03, 0x0a, 0x14, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x75, 0x70, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x3f, 0x0a, 0x09, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x75,
	0x70, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x48,
	0x6f, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x39, 0x0a,
	0x07, 0x64, 0x62, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x75, 0x70, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x44, 0x42, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x06, 0x64, 0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x62, 0x5f, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x62,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x70, 0x5f, 0x61, 0x64,
	0x64, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x70, 0x41, 0x64, 0x64, 0x72,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x70, 0x6f, 0x72, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x6f, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x73, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x73, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x5f, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6b, 0x65, 0x72,
	0x6e, 0x65, 0x6c, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e,
	0x76, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x6e, 0x76, 0x22, 0x3d, 0x0a, 0x08,
	0x48, 0x6f, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e,
	0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x53, 0x45, 0x4c, 0x46, 0x10, 0x01, 0x12,
	0x0a, 0x0a, 0x06, 0x41, 0x4c, 0x49, 0x59, 0x55, 0x4e, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x54,
	0x45, 0x4e, 0x43, 0x45, 0x4e, 0x54, 0x59, 0x55, 0x4e, 0x10, 0x03, 0x22, 0x35, 0x0a, 0x06, 0x44,
	0x42, 0x54, 0x79, 0x70, 0x65, 0x12, 0x09, 0x0a, 0x05, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x10, 0x00,
	0x12, 0x08, 0x0a, 0x04, 0x54, 0x49, 0x44, 0x42, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x52, 0x45,
	0x44, 0x49, 0x53, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x4d, 0x4f, 0x4e, 0x47, 0x4f, 0x44, 0x42,
	0x10, 0x03, 0x22, 0x17, 0x0a, 0x15, 0x53, 0x74, 0x61, 0x72, 0x74, 0x75, 0x70, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xdb, 0x01, 0x0a, 0x1b,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e,
	0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x13, 0x0a, 0x05, 0x64, 0x62, 0x5f,
	0x69, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x62, 0x49, 0x70, 0x12, 0x17,
	0x0a, 0x07, 0x64, 0x62, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x64, 0x62, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x66,
	0x72, 0x6f, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12,
	0x18, 0x0a, 0x07, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x22, 0xcb, 0x01, 0x0a, 0x1c, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x6f,
	0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x6f, 0x6f, 0x6b, 0x12, 0x1b,
	0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x64, 0x5f, 0x6f, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x64, 0x4f, 0x75, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x66,
	0x72, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73,
	0x69, 0x7a, 0x65, 0x12, 0x20, 0x0a, 0x04, 0x68, 0x69, 0x74, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x48, 0x69, 0x74, 0x73, 0x52, 0x65, 0x73, 0x52,
	0x04, 0x68, 0x69, 0x74, 0x73, 0x12, 0x30, 0x0a, 0x0c, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x41, 0x67, 0x67, 0x73, 0x52, 0x65, 0x73, 0x52, 0x0c, 0x61, 0x67, 0x67, 0x72, 0x65,
	0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x1d, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x4a, 0x0a, 0x07, 0x48, 0x69, 0x74, 0x73, 0x52, 0x65,
	0x73, 0x12, 0x20, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x12, 0x1d, 0x0a, 0x04, 0x68, 0x69, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x09, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x48, 0x69, 0x74, 0x73, 0x52, 0x04, 0x68, 0x69,
	0x74, 0x73, 0x22, 0x1a, 0x0a, 0x08, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x70, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x22, 0x1b,
	0x0a, 0x05, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x1d, 0x0a, 0x07, 0x46,
	0x69, 0x6c, 0x65, 0x73, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x1d, 0x0a, 0x07, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x1a, 0x0a, 0x04, 0x48, 0x6f, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x1c, 0x0a, 0x08, 0x4c, 0x6f, 0x63, 0x6b, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03,
	0x73, 0x65, 0x63, 0x22, 0xc8, 0x01, 0x0a, 0x07, 0x53, 0x6c, 0x6f, 0x77, 0x4c, 0x6f, 0x67, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x2a, 0x0a, 0x09, 0x6c, 0x6f, 0x63, 0x6b, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x4c, 0x6f, 0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x6b, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f, 0x77, 0x73, 0x5f, 0x73, 0x65, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x72, 0x6f, 0x77, 0x73, 0x53, 0x65, 0x6e, 0x74,
	0x12, 0x23, 0x0a, 0x0d, 0x72, 0x6f, 0x77, 0x73, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x69, 0x6e, 0x65,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x72, 0x6f, 0x77, 0x73, 0x45, 0x78, 0x61,
	0x6d, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x22, 0x4c,
	0x0a, 0x05, 0x4d, 0x79, 0x73, 0x71, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x68, 0x72, 0x65, 0x61,
	0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x74, 0x68, 0x72, 0x65,
	0x61, 0x64, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x07, 0x73, 0x6c, 0x6f, 0x77, 0x6c, 0x6f, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x6c, 0x6f, 0x77,
	0x4c, 0x6f, 0x67, 0x52, 0x07, 0x73, 0x6c, 0x6f, 0x77, 0x6c, 0x6f, 0x67, 0x22, 0x1a, 0x0a, 0x04,
	0x55, 0x73, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xd6, 0x02, 0x0a, 0x06, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x12, 0x1a, 0x0a,
	0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x25, 0x0a, 0x06, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x70, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x12, 0x26, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x65, 0x74, 0x52,
	0x07, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x65, 0x74, 0x12, 0x20, 0x0a, 0x05, 0x69, 0x6e, 0x70, 0x75,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x52, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1d, 0x0a, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x40,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x26, 0x0a, 0x07, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x1d, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x09, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74,
	0x12, 0x20, 0x0a, 0x05, 0x6d, 0x79, 0x73, 0x71, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4d, 0x79, 0x73, 0x71, 0x6c, 0x52, 0x05, 0x6d, 0x79, 0x73,
	0x71, 0x6c, 0x12, 0x1d, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x09, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65,
	0x72, 0x22, 0x54, 0x0a, 0x04, 0x48, 0x69, 0x74, 0x73, 0x12, 0x15, 0x0a, 0x06, 0x5f, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x12, 0x0f, 0x0a, 0x03, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49,
	0x64, 0x12, 0x24, 0x0a, 0x07, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52,
	0x06, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x44, 0x0a, 0x07, 0x41, 0x67, 0x67, 0x73, 0x52,
	0x65, 0x73, 0x12, 0x1d, 0x0a, 0x04, 0x6c, 0x6f, 0x67, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x09, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x04, 0x6c, 0x6f, 0x67,
	0x73, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x22, 0x2e, 0x0a,
	0x04, 0x4c, 0x6f, 0x67, 0x73, 0x12, 0x26, 0x0a, 0x07, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x42, 0x75, 0x63,
	0x6b, 0x65, 0x74, 0x73, 0x52, 0x07, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x22, 0x5c, 0x0a,
	0x07, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x22, 0x0a, 0x0d, 0x6b, 0x65, 0x79, 0x5f,
	0x61, 0x73, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x6b, 0x65, 0x79, 0x41, 0x73, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1b,
	0x0a, 0x09, 0x64, 0x6f, 0x63, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x64, 0x6f, 0x63, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x44, 0x0a, 0x14, 0x47,
	0x65, 0x74, 0x44, 0x42, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x22, 0xa7, 0x01, 0x0a, 0x09, 0x44, 0x42, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x62, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x62, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x47, 0x0a, 0x15, 0x47,
	0x65, 0x74, 0x44, 0x42, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x0a, 0x64, 0x62, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x44,
	0x42, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x0a, 0x64, 0x62, 0x63, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x73, 0x22, 0x64, 0x0a, 0x13, 0x4e, 0x65, 0x77, 0x44, 0x42, 0x43, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x62, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x64, 0x62, 0x54, 0x79, 0x70, 0x65, 0x22, 0xd3, 0x03, 0x0a, 0x0f, 0x44,
	0x42, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x62, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x62, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x62, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x62, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x70, 0x61, 0x64, 0x64, 0x72, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x70, 0x61, 0x64, 0x64, 0x72, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x6f, 0x72,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6f,
	0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x73, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x1b, 0x0a, 0x09, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x05, 0x65,
	0x78, 0x74, 0x72, 0x61, 0x18, 0x63, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x44, 0x42, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x05, 0x65, 0x78,
	0x74, 0x72, 0x61, 0x88, 0x01, 0x01, 0x1a, 0x2e, 0x0a, 0x09, 0x45, 0x78, 0x74, 0x72, 0x61, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x65, 0x78, 0x74, 0x72, 0x61,
	0x22, 0xad, 0x01, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e,
	0x44, 0x62, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x62, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x62, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e, 0x76, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65,
	0x6e, 0x76, 0x12, 0x20, 0x0a, 0x09, 0x69, 0x70, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x69, 0x70, 0x50, 0x72, 0x65, 0x66, 0x69,
	0x78, 0x88, 0x01, 0x01, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x69, 0x70, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78,
	0x22, 0x55, 0x0a, 0x23, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x44,
	0x62, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x44,
	0x42, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x07,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x22, 0x1c, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x44, 0x62,
	0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x4d, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x44, 0x62, 0x43, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x42, 0x43, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x07, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x73, 0x22, 0x3e, 0x0a, 0x1d, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x44, 0x62,
	0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x49, 0x64, 0x73, 0x22, 0x20, 0x0a, 0x1e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x44, 0x62,
	0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x13, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c,
	0x54, 0x61, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x28, 0x0a, 0x12, 0x47,
	0x65, 0x74, 0x41, 0x6c, 0x6c, 0x54, 0x61, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x61, 0x67, 0x73, 0x22, 0x57, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x54, 0x61, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03,
	0x74, 0x61, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x61, 0x67, 0x22, 0x10,
	0x0a, 0x0e, 0x41, 0x64, 0x64, 0x54, 0x61, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x67, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49,
	0x6e, 0x64, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x6f, 0x22, 0xd4, 0x03, 0x0a, 0x1a, 0x47, 0x65,
	0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x0a, 0x63, 0x70, 0x75, 0x5f,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e,
	0x64, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x09, 0x63, 0x70, 0x75, 0x52, 0x61, 0x74,
	0x69, 0x6f, 0x73, 0x12, 0x49, 0x0a, 0x0a, 0x6d, 0x65, 0x6d, 0x5f, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65,
	0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x09, 0x6d, 0x65, 0x6d, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x73, 0x12, 0x4b,
	0x0a, 0x0b, 0x64, 0x69, 0x73, 0x6b, 0x5f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x0a, 0x64, 0x69, 0x73, 0x6b, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x73, 0x12, 0x3c, 0x0a, 0x03, 0x71,
	0x70, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47,
	0x65, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x03, 0x71, 0x70, 0x73, 0x12, 0x3c, 0x0a, 0x03, 0x74, 0x70, 0x73,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x03, 0x74, 0x70, 0x73, 0x1a, 0x57, 0x0a, 0x0a, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x32, 0xcb, 0x08, 0x0a, 0x10, 0x44, 0x42, 0x52, 0x61, 0x69, 0x6e, 0x68, 0x75, 0x62, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4b, 0x0a, 0x05, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x12, 0x16,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x48, 0x65, 0x6c,
	0x6c, 0x6f, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x11, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0b, 0x22, 0x09, 0x2f, 0x76, 0x31, 0x2f, 0x68, 0x65, 0x6c,
	0x6c, 0x6f, 0x12, 0x8d, 0x01, 0x0a, 0x22, 0x44, 0x62, 0x52, 0x61, 0x69, 0x6e, 0x68, 0x75, 0x62,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x73,
	0x57, 0x69, 0x74, 0x68, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x6f,
	0x67, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x22,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x22, 0x1a, 0x2f, 0x64, 0x62, 0x72, 0x61, 0x69, 0x6e, 0x68,
	0x75, 0x62, 0x2f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x12, 0x5b, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x44, 0x42, 0x43, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x73, 0x12, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x42, 0x43,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x42, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x13, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x0d, 0x12, 0x0b, 0x2f, 0x64, 0x62, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x12,
	0x4e, 0x0a, 0x0d, 0x4e, 0x65, 0x77, 0x44, 0x42, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73,
	0x12, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4e, 0x65, 0x77, 0x44, 0x42, 0x43, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0e, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x44, 0x42, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x22, 0x13, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x0d, 0x22, 0x0b, 0x2f, 0x64, 0x62, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x12,
	0x97, 0x01, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x44,
	0x62, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12,
	0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x41, 0x73, 0x73, 0x69, 0x67,
	0x6e, 0x44, 0x62, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47,
	0x65, 0x74, 0x54, 0x6f, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x44, 0x62, 0x43, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x12, 0x1d, 0x2f, 0x64, 0x62, 0x63,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x2f, 0x74, 0x6f, 0x5f, 0x61, 0x73, 0x73, 0x69, 0x67,
	0x6e, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x80, 0x01, 0x0a, 0x13, 0x47, 0x65,
	0x74, 0x44, 0x62, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x73, 0x12, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x62, 0x43, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x62, 0x43, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x26, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20, 0x12, 0x1e, 0x2f, 0x64,
	0x62, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x2f, 0x3a, 0x63, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x49, 0x64, 0x2f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x89, 0x01, 0x0a,
	0x16, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x44, 0x62, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x44, 0x62, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x44, 0x62, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x26, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20, 0x1a, 0x1e, 0x2f, 0x64, 0x62, 0x63, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x73, 0x2f, 0x3a, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64,
	0x2f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x50, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x41,
	0x6c, 0x6c, 0x54, 0x61, 0x67, 0x73, 0x12, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74,
	0x41, 0x6c, 0x6c, 0x54, 0x61, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x54, 0x61, 0x67, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x11, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0b, 0x12,
	0x09, 0x2f, 0x74, 0x61, 0x67, 0x73, 0x2f, 0x61, 0x6c, 0x6c, 0x12, 0x40, 0x0a, 0x06, 0x41, 0x64,
	0x64, 0x54, 0x61, 0x67, 0x12, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x64, 0x64, 0x54, 0x61,
	0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x41,
	0x64, 0x64, 0x54, 0x61, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x0d, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x07, 0x22, 0x05, 0x2f, 0x74, 0x61, 0x67, 0x73, 0x12, 0x70, 0x0a, 0x12,
	0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x64, 0x69, 0x63,
	0x65, 0x73, 0x12, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x22, 0x11, 0x2f, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x65, 0x73, 0x42, 0x07,
	0x5a, 0x05, 0x2e, 0x2f, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_http_proto_rawDescOnce sync.Once
	file_http_proto_rawDescData = file_http_proto_rawDesc
)

func file_http_proto_rawDescGZIP() []byte {
	file_http_proto_rawDescOnce.Do(func() {
		file_http_proto_rawDescData = protoimpl.X.CompressGZIP(file_http_proto_rawDescData)
	})
	return file_http_proto_rawDescData
}

var file_http_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_http_proto_msgTypes = make([]protoimpl.MessageInfo, 45)
var file_http_proto_goTypes = []interface{}{
	(StartupReportRequest_HostType)(0),            // 0: api.StartupReportRequest.HostType
	(StartupReportRequest_DBType)(0),              // 1: api.StartupReportRequest.DBType
	(*HelloWorldRequest)(nil),                     // 2: api.HelloWorldRequest
	(*HelloWorldResponse)(nil),                    // 3: api.HelloWorldResponse
	(*HeartbeatRequest)(nil),                      // 4: api.HeartbeatRequest
	(*HeartbeatResponse)(nil),                     // 5: api.HeartbeatResponse
	(*StartupReportRequest)(nil),                  // 6: api.StartupReportRequest
	(*StartupReportResponse)(nil),                 // 7: api.StartupReportResponse
	(*SearchMemberLogCountRequest)(nil),           // 8: api.SearchMemberLogCountRequest
	(*SearchMemberLogCountResponse)(nil),          // 9: api.SearchMemberLogCountResponse
	(*Total)(nil),                                 // 10: api.Total
	(*HitsRes)(nil),                               // 11: api.HitsRes
	(*SourceIp)(nil),                              // 12: api.SourceIp
	(*Input)(nil),                                 // 13: api.Input
	(*Fileset)(nil),                               // 14: api.Fileset
	(*Service)(nil),                               // 15: api.Service
	(*Host)(nil),                                  // 16: api.Host
	(*LockTime)(nil),                              // 17: api.LockTime
	(*SlowLog)(nil),                               // 18: api.SlowLog
	(*Mysql)(nil),                                 // 19: api.Mysql
	(*User)(nil),                                  // 20: api.User
	(*Source)(nil),                                // 21: api.Source
	(*Hits)(nil),                                  // 22: api.Hits
	(*AggsRes)(nil),                               // 23: api.AggsRes
	(*Logs)(nil),                                  // 24: api.Logs
	(*Buckets)(nil),                               // 25: api.Buckets
	(*GetDBClustersRequest)(nil),                  // 26: api.GetDBClustersRequest
	(*DBCluster)(nil),                             // 27: api.DBCluster
	(*GetDBClustersResponse)(nil),                 // 28: api.GetDBClustersResponse
	(*NewDBClusterRequest)(nil),                   // 29: api.NewDBClusterRequest
	(*DBClusterMember)(nil),                       // 30: api.DBClusterMember
	(*GetToAssignDbClusterMembersRequest)(nil),    // 31: api.GetToAssignDbClusterMembersRequest
	(*GetToAssignDbClusterMembersResponse)(nil),   // 32: api.GetToAssignDbClusterMembersResponse
	(*GetDbClusterMembersRequest)(nil),            // 33: api.GetDbClusterMembersRequest
	(*GetDbClusterMembersResponse)(nil),           // 34: api.GetDbClusterMembersResponse
	(*AssignDbClusterMembersRequest)(nil),         // 35: api.AssignDbClusterMembersRequest
	(*AssignDbClusterMembersResponse)(nil),        // 36: api.AssignDbClusterMembersResponse
	(*GetAllTagsRequest)(nil),                     // 37: api.GetAllTagsRequest
	(*GetAllTagsResponse)(nil),                    // 38: api.GetAllTagsResponse
	(*AddTagRequest)(nil),                         // 39: api.AddTagRequest
	(*AddTagResponse)(nil),                        // 40: api.AddTagResponse
	(*GetInstanceIndicesRequest)(nil),             // 41: api.GetInstanceIndicesRequest
	(*GetInstanceIndicesResponse)(nil),            // 42: api.GetInstanceIndicesResponse
	(*HeartbeatRequest_Agent)(nil),                // 43: api.HeartbeatRequest.Agent
	(*HeartbeatRequest_DB)(nil),                   // 44: api.HeartbeatRequest.DB
	(*DBClusterMember_ExtraInfo)(nil),             // 45: api.DBClusterMember.ExtraInfo
	(*GetInstanceIndicesResponse_IndexValue)(nil), // 46: api.GetInstanceIndicesResponse.IndexValue
}
var file_http_proto_depIdxs = []int32{
	43, // 0: api.HeartbeatRequest.agent_info:type_name -> api.HeartbeatRequest.Agent
	44, // 1: api.HeartbeatRequest.dbInfo:type_name -> api.HeartbeatRequest.DB
	0,  // 2: api.StartupReportRequest.host_type:type_name -> api.StartupReportRequest.HostType
	1,  // 3: api.StartupReportRequest.db_type:type_name -> api.StartupReportRequest.DBType
	11, // 4: api.SearchMemberLogCountResponse.hits:type_name -> api.HitsRes
	23, // 5: api.SearchMemberLogCountResponse.aggregations:type_name -> api.AggsRes
	10, // 6: api.HitsRes.total:type_name -> api.Total
	22, // 7: api.HitsRes.hits:type_name -> api.Hits
	17, // 8: api.SlowLog.lock_time:type_name -> api.LockTime
	18, // 9: api.Mysql.slowlog:type_name -> api.SlowLog
	12, // 10: api.Source.source:type_name -> api.SourceIp
	14, // 11: api.Source.fileset:type_name -> api.Fileset
	13, // 12: api.Source.input:type_name -> api.Input
	15, // 13: api.Source.service:type_name -> api.Service
	16, // 14: api.Source.host:type_name -> api.Host
	19, // 15: api.Source.mysql:type_name -> api.Mysql
	20, // 16: api.Source.user:type_name -> api.User
	21, // 17: api.Hits._source:type_name -> api.Source
	24, // 18: api.AggsRes.logs:type_name -> api.Logs
	25, // 19: api.Logs.buckets:type_name -> api.Buckets
	27, // 20: api.GetDBClustersResponse.dbclusters:type_name -> api.DBCluster
	45, // 21: api.DBClusterMember.extra:type_name -> api.DBClusterMember.ExtraInfo
	30, // 22: api.GetToAssignDbClusterMembersResponse.members:type_name -> api.DBClusterMember
	30, // 23: api.GetDbClusterMembersResponse.members:type_name -> api.DBClusterMember
	46, // 24: api.GetInstanceIndicesResponse.cpu_ratios:type_name -> api.GetInstanceIndicesResponse.IndexValue
	46, // 25: api.GetInstanceIndicesResponse.mem_ratios:type_name -> api.GetInstanceIndicesResponse.IndexValue
	46, // 26: api.GetInstanceIndicesResponse.disk_ratios:type_name -> api.GetInstanceIndicesResponse.IndexValue
	46, // 27: api.GetInstanceIndicesResponse.qps:type_name -> api.GetInstanceIndicesResponse.IndexValue
	46, // 28: api.GetInstanceIndicesResponse.tps:type_name -> api.GetInstanceIndicesResponse.IndexValue
	2,  // 29: api.DBRainhubService.Hello:input_type -> api.HelloWorldRequest
	8,  // 30: api.DBRainhubService.DbRainhubSearchMemberLogsWithCount:input_type -> api.SearchMemberLogCountRequest
	26, // 31: api.DBRainhubService.GetDBClusters:input_type -> api.GetDBClustersRequest
	29, // 32: api.DBRainhubService.NewDBClusters:input_type -> api.NewDBClusterRequest
	31, // 33: api.DBRainhubService.GetToAssignDbClusterMembers:input_type -> api.GetToAssignDbClusterMembersRequest
	33, // 34: api.DBRainhubService.GetDbClusterMembers:input_type -> api.GetDbClusterMembersRequest
	35, // 35: api.DBRainhubService.AssignDbClusterMembers:input_type -> api.AssignDbClusterMembersRequest
	37, // 36: api.DBRainhubService.GetAllTags:input_type -> api.GetAllTagsRequest
	39, // 37: api.DBRainhubService.AddTag:input_type -> api.AddTagRequest
	41, // 38: api.DBRainhubService.GetInstanceIndices:input_type -> api.GetInstanceIndicesRequest
	3,  // 39: api.DBRainhubService.Hello:output_type -> api.HelloWorldResponse
	9,  // 40: api.DBRainhubService.DbRainhubSearchMemberLogsWithCount:output_type -> api.SearchMemberLogCountResponse
	28, // 41: api.DBRainhubService.GetDBClusters:output_type -> api.GetDBClustersResponse
	27, // 42: api.DBRainhubService.NewDBClusters:output_type -> api.DBCluster
	32, // 43: api.DBRainhubService.GetToAssignDbClusterMembers:output_type -> api.GetToAssignDbClusterMembersResponse
	34, // 44: api.DBRainhubService.GetDbClusterMembers:output_type -> api.GetDbClusterMembersResponse
	36, // 45: api.DBRainhubService.AssignDbClusterMembers:output_type -> api.AssignDbClusterMembersResponse
	38, // 46: api.DBRainhubService.GetAllTags:output_type -> api.GetAllTagsResponse
	40, // 47: api.DBRainhubService.AddTag:output_type -> api.AddTagResponse
	42, // 48: api.DBRainhubService.GetInstanceIndices:output_type -> api.GetInstanceIndicesResponse
	39, // [39:49] is the sub-list for method output_type
	29, // [29:39] is the sub-list for method input_type
	29, // [29:29] is the sub-list for extension type_name
	29, // [29:29] is the sub-list for extension extendee
	0,  // [0:29] is the sub-list for field type_name
}

func init() { file_http_proto_init() }
func file_http_proto_init() {
	if File_http_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_http_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HelloWorldRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_http_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HelloWorldResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_http_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeartbeatRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_http_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeartbeatResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_http_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartupReportRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_http_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartupReportResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_http_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchMemberLogCountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_http_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchMemberLogCountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_http_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Total); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_http_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HitsRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_http_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SourceIp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_http_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Input); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_http_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Fileset); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_http_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Service); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_http_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Host); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_http_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LockTime); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_http_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SlowLog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_http_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Mysql); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_http_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_http_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Source); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_http_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Hits); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_http_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AggsRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_http_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Logs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_http_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Buckets); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_http_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDBClustersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_http_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DBCluster); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_http_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDBClustersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_http_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewDBClusterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_http_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DBClusterMember); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_http_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetToAssignDbClusterMembersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_http_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetToAssignDbClusterMembersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_http_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDbClusterMembersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_http_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDbClusterMembersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_http_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssignDbClusterMembersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_http_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssignDbClusterMembersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_http_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllTagsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_http_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllTagsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_http_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddTagRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_http_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddTagResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_http_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInstanceIndicesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_http_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInstanceIndicesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_http_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeartbeatRequest_Agent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_http_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeartbeatRequest_DB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_http_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DBClusterMember_ExtraInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_http_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInstanceIndicesResponse_IndexValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_http_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_http_proto_msgTypes[28].OneofWrappers = []interface{}{}
	file_http_proto_msgTypes[29].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_http_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   45,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_http_proto_goTypes,
		DependencyIndexes: file_http_proto_depIdxs,
		EnumInfos:         file_http_proto_enumTypes,
		MessageInfos:      file_http_proto_msgTypes,
	}.Build()
	File_http_proto = out.File
	file_http_proto_rawDesc = nil
	file_http_proto_goTypes = nil
	file_http_proto_depIdxs = nil
}
